1.)Briefly describe the concept of "Stack Frame":
A stack frame is a frame of data that gets pushed onto the stack, it is used for a specific procedure or subprogram.




2.)Briefly describe the concept of a "Calling Convention":
A calling convention is a scheme for how subroutines receive parameters from their caller and how they return a result.


3.)Why do the book examples always start functions with "push ebp" and "mov ebp,esp":
"push edp" is used to save edp, and "move ebp,esp" points to the top of a new stack frame


4.)What is the x64 equivalent to "push ebp" and "mov ebp,esp)"
push rbp
mov rbp,rsp


5.)What are the differences between "Microsoft x64 calling convention" and "System V AMD64 ABI calling convention":
System V AMD64 ABI does not have provided shadowspace, gets more perameters, has only 1 calling convention


6.)Upon entry to myFunction (above), what does the stack look like when using Microsoft x64 calling convention?
a --> rcx
b --> rdx
c --> r8
d --> r9

7.)Upon entry to myFunction (above), what does the stack look like when using stdcall convention:
f --> rcx
e --> rdx
d --> r8
c --> r9
b + a pushed on the stack
